allprojects {
    repositories {
        mavenCentral()
	    jcenter()
	    maven { url "https://repo.spring.io/snapshot" }
	    maven { url "https://repo.spring.io/milestone" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    dependencies {
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'junit:junit:4.13'
        testImplementation 'org.mockito:mockito-core:3.4.4'

        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor  "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly  "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor  "org.projectlombok:lombok:${lombokVersion}"
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.1'
    }

    configurations.all {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }

    test.finalizedBy(project.tasks.jacocoTestReport)

    jacocoTestReport {
        dependsOn test
        reports {
            xml.enabled true
            xml.destination file("${buildDir}/reports/jacoco.xml")
            csv.enabled false
            html.destination file("${buildDir}/reports/jacocoHtml")
        }
    }

    ext.libs = [
            unit_tests: [
                    "junit:junit:4.12",
                    "org.junit.jupiter:junit-jupiter-api:5.7.0",
                    "junit:junit:4.12",
                    "org.mockito:mockito-core:2.23.0",
                    "org.assertj:assertj-core:3.3.0"
            ],
            spring_boot: [
                    "org.springframework.boot:spring-boot-starter-actuator",
                    "org.springframework.boot:spring-boot-starter-logging:${springBootVersion}",
                    "org.springframework.boot:spring-boot-devtools:${springBootVersion}",
                    "org.springframework.boot:spring-boot-starter:${springBootVersion}"
            ]
    ]

}

jacoco {
    toolVersion = "${jacocoVersion}"
    reportsDir = file("$buildDir/reports")
}

task jacocoMergedReport(type: JacocoReport) {
    dependsOn = subprojects.jacocoTestReport
    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}
tasks.named('wrapper') {
  gradleVersion = '7.5'
 }
